---
- hosts: all
  tasks:
    - name: Script Compilation Issue
      ansible.builtin.fail:
        msg: COMPILE variable is empty ! Fat fingers ?!?
      when: COMPILE is not defined

    - name: Create list of files to compile
      ansible.builtin.set_fact:
        cmpfiles: "{{ COMPILE.split(',') }}"
      when: COMPILE | length > 0

    - name: Check CHALLENGE variable setup
      ansible.builtin.fail:
        msg: CHALLENGE variable is empty ! Fat fingers ?!?
      when: CHALLENGE is not defined

    - name: Print the cmpfiles var
      ansible.builtin.debug:
        var: cmpfiles

    - name: Test whether we have a token variables file
      ansible.builtin.stat:
        path: "{{ VARDIRECTORY }}/variables_{{ CHALLENGE }}.yml"
      ignore_errors: true
      register: token_file

    - ansible.builtin.include_vars:
        ansible.builtin.file: "{{ VARDIRECTORY }}/variables_{{ CHALLENGE }}.yml"
      when: token_file.stat.exists

    # Allows usage of jinja2 variables in the script to compile
    # These variables should be protected as pre-processed by deliver
    - name: Expand file to compile with token variables
      ansible.builtin.template:
        src: "{{ SCRIPTDIRECTORY }}/{{ item }}"
        dest: "{{ STUDDIR }}/student{{ STDID }}/{{ item }}"
        mode: "0600"
      with_items: "{{ cmpfiles }}"
      when: COMPILE | length > 0

    - name: Compile shc scripts in place
      ansible.builtin.shell: cd "{{ STUDDIR }}/student{{ STDID }}" && shc -f "{{ item }}"
      with_items: "{{ cmpfiles }}"
      when: COMPILE | length > 0

    - name: Make compiled shc scripts available to student
      become: true
      become_user: root
      ansible.builtin.file:
        path: "{{ item }}"
        owner: student{{ STDID }}
        group: student{{ STDID }}
        mode: "0755"
      with_fileglob: "{{ STUDDIR }}/student{{ STDID }}/*.shc.x"
      when: COMPILE | length > 0

    - name: Setup ACL for the scripts
      become: true
      become_user: root
      ansible.posix.acl:
        path: "{{ item }}"
        recursive: false
        entity: "{{ WODUSER }}"
        etype: user
        permissions: rwx
        state: present
      with_fileglob: "{{ STUDDIR }}/student{{ STDID }}/*.shc.x"
      when: COMPILE | length > 0

    - name: Remove shc scripts in place
      ansible.builtin.command: rm -f {{ STUDDIR }}/student{{ STDID }}/*.c.x {{ STUDDIR }}/student{{ STDID }}/*.x {{ STUDDIR }}/student{{ STDID }}/*.shc
      when: COMPILE | length > 0

    - name: Remove .x.c scripts in place
      become: true
      become_user: root
      ansible.builtin.command: rm -f {{ item }}
      with_fileglob: "{{ STUDDIR }}/student{{ STDID }}/*.shc.x.c"
      when: COMPILE | length > 0
