# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.synced_folder './', '/vagrant', type: 'rsync'
  #config.vm.synced_folder './', '/vagrant', type: 'nfs'
  config.vm.provider :libvirt do |domain|
    domain.default_prefix = ""
  end

  # Setup your DHCP server on your local LAN so it allocates fixed IP addresses to the VMs
  # based on their fixed MAC addresses
  # and setup as well your DNS so names correspond
  config.vm.define :test do |test|
    test.vm.box = "generic/centos7"
    test.vm.hostname = "test.wodnet.local"
    # The last option is mandatory to have a correct host name
    test.vm.network :public_network, :mac => "525400010100", :libvirt__domain_name => "test.wodnet.local"
    test.vm.network :forwarded_port, guest: 8000, host: 8009
  end
  config.vm.define :wodbec8 do |wodbec8|
    wodbec8.vm.box = "generic/rocky8"
    wodbec8.vm.hostname = "wodbec8.wodnet.local"
    wodbec8.vm.network :public_network, :mac => "525400010101", :libvirt__domain_name => "wodbec8.wodnet.local"
    wodbec8.vm.network "forwarded_port", guest: 8000, host: 8009
  end
  config.vm.define :wodbec7 do |wodbec7|
    wodbec7.vm.box = "generic/centos7"
    wodbec7.vm.hostname = "wodbec7.wodnet.local"
    wodbec7.vm.network :public_network, :mac => "525400010104", :libvirt__domain_name => "wodbec7.wodnet.local"
    wodbec7.vm.network "forwarded_port", guest: 8000, host: 8010
  end
  config.vm.define :wodbeu2004 do |wodbeubuntu2004|
    wodbeubuntu2004.vm.box = "generic/ubuntu2004"
    wodbeubuntu2004.vm.hostname = "wodbeu2004.wodnet.local"
    wodbeubuntu2004.vm.network :public_network, :mac => "525400010105", :libvirt__domain_name => "wodbeu2004.wodnet.local"
    wodbeubuntu2004.vm.network "forwarded_port", guest: 8000, host: 8011
  end
  config.vm.define :wodbeu2204 do |wodbeubuntu2204|
    wodbeubuntu2204.vm.box = "generic/ubuntu2204"
    wodbeubuntu2204.vm.hostname = "wodbeu2204.wodnet.local"
    wodbeubuntu2204.vm.network :public_network, :mac => "525400010106", :libvirt__domain_name => "wodbeu2204.wodnet.local"
    wodbeubuntu2204.vm.network "forwarded_port", guest: 8000, host: 8012
    wodbeubuntu2204.vm.provision "shell",
      # This has to be so until your host system uses an openssh >= 8.8
      # and your private key is not RSA1 anymore deprecated with it.
      # located under $HOME/.vagrant.d/insecure_private_key
      # or replace manually this private key with an ssh-ed25519 one
      inline: <<-EOS
      echo 'PubkeyAcceptedKeyTypes=+ssh-rsa' > /etc/ssh/sshd_config.d/wod.conf
      echo 'PubkeyAcceptedAlgorithms=+ssh-rsa' >> /etc/ssh/sshd_config.d/wod.conf
      # I also have to modify DNS resolution despite systemd believeing it does it correctly
      rm -f /etc/resolv.conf
      echo 'nameserver 192.168.8.2' > /etc/resolv.conf
      echo 'search home.musique-ancienne.org' >> /etc/resolv.conf
      EOS
  end
  config.vm.define :"wodfeu2204" do |wodfeubuntu2204|
    wodfeubuntu2204.vm.box = "generic/ubuntu2204"
    wodfeubuntu2204.vm.hostname = "wodfeu2204.wodnet.local"
    wodfeubuntu2204.vm.network :public_network, :mac => "525400010102", :libvirt__domain_name => "wodfeubuntu2204.wodnet.local"
    wodfeubuntu2204.vm.network "forwarded_port", guest: 8000, host: 8020
  end
  config.vm.define :"wodapiu2204" do |wodapiubuntu2204|
    wodapiubuntu2204.vm.box = "generic/ubuntu2204"
    wodapiubuntu2204.vm.hostname = "wodapiu2204.wodnet.local"
    wodapiubuntu2204.vm.network :public_network, :mac => "525400010103", :libvirt__domain_name => "wodapiubuntu2204.wodnet.local"
    wodapiubuntu2204.vm.network "forwarded_port", guest: 8000, host: 8021
  end
  config.vm.define :wodappDocker101 do |wodappDocker101|
    wodappDocker101.vm.box = "generic/centos7"
    wodappDocker101.vm.hostname = "wodappDocker101.wodnet.local"
    wodappDocker101.vm.network :public_network, :mac => "525400010104", :libvirt__domain_name => "wodappDocker101.wodnet.local"
    wodappDocker101.vm.network "forwarded_port", guest: 8000, host: 8010
  end

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   apt-get update
  #   apt-get install -y apache2
  # SHELL
end
